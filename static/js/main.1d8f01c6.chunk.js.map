{"version":3,"sources":["replay.ts","palette.ts","TurnControls.tsx","StatsTable.tsx","Drawer.tsx","myGL.ts","SpritePicker.ts","vertexPosBuffers.ts","mapUtils.ts","Board.tsx","geom.ts","App.tsx","serviceWorker.ts","index.tsx","errors.ts"],"names":["GameMode","isFinished","replay","results","length","paletteColor5","delayOptions","useStyles","makeStyles","buttonContainer","display","justifyContent","button","minWidth","TurnControls","props","_useState","useState","currentTurnIndex","toString","_useState2","Object","slicedToArray","turnInputValue","setTurnInputValue","_useState3","_useState4","autoplay","setAutoplay","timerHandle","useRef","styles","useEffect","nextMove","useCallback","setCurrentTurnIndex","currentIndex","Math","min","turns","canNextMove","cancelTimer","undefined","current","window","clearInterval","startTimer","setTimeout","delay","react_default","a","createElement","style","marginBottom","TextField","label","margin","variant","inputProps","width","value","onChange","e","target","turn","parseInt","isNaN","max","select","marginLeft","d","parseFloat","setDelay","InputProps","endAdornment","InputAdornment","position","map","option","MenuItem","key","FormControlLabel","marginTop","control","Checkbox","checked","mode3d","ev","setMode3d","className","Button","color","size","disabled","onClick","SkipPrevious","ChevronLeft","Pause","PlayArrow","ChevronRight","SkipNext","StatsTable","traceStart","traceStartInputValue","setTraceStartInputValue","traceCurrent","setTraceCurrent","t","currentTurn","setTraceStart","players","r","playerIndex","findIndex","p","name","objectSpread","life","index","Table","padding","TableHead","TableRow","TableCell","align","TableBody","player","StatsTable_StatsTableRow","traced","tracedPlayers","indexOf","setTraced","v","setTracedPlayers","arr","concat","toConsumableArray","filter","Collapse","in","onBlur","_","placementColors","chroma","alpha","hex","StatsTableRow","background","place","moves","score","root","flexShrink","paper","borderTopLeftRadius","borderBottomLeftRadius","border","Drawer","localStorage","getItem","addressInputValue","setAddressInputValue","Drawer_Drawer","anchor","classes","id","type","_ref","asyncToGenerator","regenerator_default","mark","_callee","file","_content","wrap","_context","prev","next","preventDefault","files","readFileContents","content","sent","onReplayFileUploaded","stop","_x","apply","this","arguments","htmlFor","component","webSocket","Fragment","Typography","url","onCloseWebsocket","setItem","onKeyPress","onConnectWebsocket","TurnControls_TurnControls","StatsTable_StatsTable","blob","Blob","JSON","stringify","FileSaver","_callee2","_context2","abrupt","Promise","resolve","reader","FileReader","readAsText","onload","event","contents","result","vertexShaderSource","fragmentShaderSource","defaultTint","Float32Array","mat4Tmp1","mat4","create","mat4Tmp2","compileShader","gl","src","shader","createShader","shaderSource","initBuffers","program","atlas","transitionAttribLoc","getAttribLocation","pos1AttribLoc","enableVertexAttribArray","pos2AttribLoc","normal1AttribLoc","normal2AttribLoc","uvBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","coords","xf","yf","height","nx","ny","y","x","l","b","push","calcUvCoords","STATIC_DRAW","uvAttribLoc","tintAttribLoc","mvUniformLoc","getUniformLocation","mvpUniformLoc","textureUniformLoc","atlasTexture","programInfo","bgColor","loadAtlas","createTextureFrom","createProgram","attachShader","VERTEX_SHADER","FRAGMENT_SHADER","linkProgram","useProgram","enable","BLEND","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","clearColor","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","DEPTH_TEST","depthFunc","LEQUAL","initFrame","myGL","rotation","pi","canvasWidth","canvas","clientWidth","canvasHeight","clientHeight","viewport","mv","fromQuat","uniformMatrix4fv","mvp","identity","ortho","mul","resize","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D","uniform1i","image","createTexture","Error","texImage2D","RGBA","UNSIGNED_BYTE","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","generateMipmap","Image","console","log","planeNormal","monsterTint","chain","pickers","c","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","picker","err","return","pickFlatlandSprite","monsterOrPlayerIndex","spriteIndex","pickPowerUpSprite","defaultSpritePicker","wordSpritePicker","hordeSpritePicker","tint","bombSpritePicker","pickPlayerSpriteStart","tmpVec","vec3","origin","createVertexBuffer","posFunc","mapDim","buf","data","setVec","off","createTorusPosVertexBuffer","normX","normY","set","rotateY","PI","add","torusOuterRadius","rotateZ","createTorusNormalVertexBuffer","createPlanePosVertexBuffer","addPlayerViewToSet","posx","posy","radius","calcSeenFields","Array","fill","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","viewRadius","orientations","flexGrow","touchAction","explosionSound","Howl","pickSpritePickerFor","gameMode","training","escape","collect","snakes","avoid","rumble","horde","boom","word","deathAnimationDuration","Board","canvasRef","setMyGL","perMapVertexBuffers","prevTurnIndex","prevMode3d","deathSprites","animations","modeAnimation","modeTransition","forceRenderCounter","setForceRenderCounter","_useState5","quat","_useState6","setRotation","windowSize","_useState7","getWindowSize","_useState8","setWindowSize","handleResize","addEventListener","removeEventListener","useWindowSize","_createMyGL","createMyGL","getContext","then","map_width","map_height","planePosVertexBuffer","torusNormalVertexBuffer","torusPosVertexBuffer","now","performance","drawSpriteFunc","pos1VertexBuffer","pos2VertexBuffer","sprite","pos","vertexAttribPointer","FLOAT","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1f","drawArrays","TRIANGLE_STRIP","drawSprite","newDeathSprites","onRemove","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","s","setOpacity","remove","render","createNewDeathSprites","i","splice","startTime","play","duration","to","v2","ov","easeInOut","from","createScalarAnimation","seenTint","currentlyVisibleTint","seenFields","slice","view_radius","currentlyVisibleFields","yy","charAt","spritePicker","traceTint","turnIndex","orientationOffset","bearing","playerSprite","forEach","renderFrame","mode","scale","onPointerMove","buttons","mx","movementY","my","movementX","rot","rotateX","ref","isClient","innerWidth","innerHeight","theme","createMuiTheme","palette","primary","main","secondary","default","overrides","MuiPaper","backgroundColor","top","params","replayUrl","response","URLSearchParams","document","location","search","get","fetch","text","ErrorDialogTransition","React","forwardRef","Slide","assign","direction","createSpectatorWebsocket","_callee3","listener","_context3","reject","WebSocket","onopen","onerror","message","onmessage","messageData","parse","max_turns","onError","onHeader","onResults","onTurn","onclose","onDisconnect","Boolean","hostname","match","ReactDOM","setReplay","setWebSocket","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","error","setError","handleReplay","warning","parseReplay","ws","close","tryToLoadReplayFromUrl","ThemeProvider","CssBaseline","Dialog","open","onClose","TransitionComponent","DialogTitle","Board_Board","timeout","enter","exit","left","src_Drawer_Drawer","websocketResult","header","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1d8f01c6.chunk.js","sourcesContent":["export interface Turn {\n    turn: number;\n    players: Player[];\n    map: string;\n}\n\nexport interface Player {\n    addr: string;\n    name: string;\n    x: number;\n    y: number;\n    bearing: string;\n    life: number;\n    moves: number;\n    score: number;\n}\n\nexport enum GameMode {\n    training = \"training\",\n    escape = \"escape\",\n    collect = \"collect\",\n    snakes = \"snakes\",\n    rumble = \"rumble\",\n    avoid = \"avoid\",\n    word = \"word\",\n    boom = \"boom\",\n    horde = \"horde\"\n}\n\nexport interface Header {\n    mode?: GameMode;\n    max_turns: number;\n    map_width: number;\n    map_height: number;\n    view_radius: number;\n}\n\nexport interface Replay extends Header {\n    turns: Turn[];\n    results: Placement[];\n}\n\nexport interface Placement {\n    place: number;\n    addr: string;\n    name: string;\n    score: number;\n    moves: number;\n    killer: string;\n}\n\nexport interface Results {\n    results: Placement[];\n}\n\nexport const isFinished = (replay: Replay) => replay.results.length > 0;\n\ninterface ReplayParseResult {\n    replay: Replay;\n    warning?: string;\n}\n\nexport function parseReplay(content: string): ReplayParseResult | string {\n    try {\n        const replay: Replay = JSON.parse(content);\n        if (!replay.mode) {\n            return {\n                replay,\n                warning: \"Warning: Replay is missing mode-field - it's probably from an old bots version, using default sprites.\",\n            };\n        }\n        return {replay};\n    } catch (e) {\n        return e.toString();\n    }\n}\n","export const paletteColor0 = \"#DA4A79\";\nexport const paletteColor1 = \"#F27EA6\";\nexport const paletteColor2 = \"#7A7EBC\";\nexport const paletteColor3 = \"#272863\";\nexport const paletteColor4 = \"#1B1C43\";\nexport const paletteColor5 = \"#0E0E22\";\n","import {isFinished, Replay} from \"./replay\";\nimport React, {Dispatch, SetStateAction, useCallback, useEffect, useRef, useState} from \"react\";\nimport {Button, Checkbox, FormControlLabel, InputAdornment, MenuItem, TextField} from \"@material-ui/core\";\nimport {ChevronLeft, ChevronRight, Pause, PlayArrow, SkipNext, SkipPrevious} from \"@material-ui/icons\";\nimport {makeStyles} from \"@material-ui/styles\";\n\nconst delayOptions = [0, 0.1, 0.2, 0.5, 1, 4];\n\nconst useStyles = makeStyles({\n    buttonContainer: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n    },\n    button: {\n        minWidth: \"32px !important\",\n    },\n});\n\nexport const TurnControls = (props: {\n    replay: Replay,\n    currentTurnIndex: number,\n    delay: number,\n    setDelay: (d: number) => void,\n    setCurrentTurnIndex: Dispatch<SetStateAction<number>>,\n    mode3d: boolean,\n    setMode3d: (mode3d: boolean) => void,\n}) => {\n    const [turnInputValue, setTurnInputValue] = useState<string>((props.currentTurnIndex + 1).toString(10));\n    const [autoplay, setAutoplay] = useState<boolean>(!isFinished(props.replay));\n    const timerHandle = useRef<number>();\n    const styles = useStyles();\n\n    useEffect(() => {\n        setTurnInputValue((props.currentTurnIndex + 1).toString(10));\n    }, [props.currentTurnIndex]);\n\n    const nextMove = useCallback(() =>\n            props.setCurrentTurnIndex(currentIndex => {\n                return Math.min(props.replay.turns.length - 1, currentIndex + 1)\n            })\n        , [props]);\n\n    const canNextMove = useCallback(() => props.currentTurnIndex < props.replay.turns.length - 1,\n        [props]);\n\n    const cancelTimer = useCallback(() => {\n        if (timerHandle.current !== undefined) {\n            window.clearInterval(timerHandle.current);\n        }\n        timerHandle.current = undefined;\n    }, []);\n\n    const startTimer = useCallback(() => {\n        cancelTimer();\n        timerHandle.current = window.setTimeout(() => {\n            timerHandle.current = undefined;\n            nextMove();\n        }, props.delay * 1000);\n    }, [cancelTimer, nextMove, props.delay]);\n\n    const startAutoplay = () => {\n        cancelTimer();\n        setAutoplay(true);\n    };\n\n    const stopAutoplay = () => {\n        cancelTimer();\n        setAutoplay(false);\n    };\n\n    useEffect(() => {\n        // console.log(`TurnControls#useEffect, autoplay: ${autoplay}, canNextMove():${canNextMove()}, currentTurnIndex:${props.currentTurnIndex}, props.replay.turns.length: ${props.replay.turns.length}, timerHandle.current: ${timerHandle.current}`);\n\n        if (autoplay && !canNextMove()) {\n            cancelTimer();\n            if (isFinished(props.replay)) {\n                setAutoplay(false);\n            }\n        } else if (autoplay && timerHandle.current === undefined && canNextMove()) {\n            startTimer();\n        }\n    }, [autoplay, startTimer, cancelTimer, nextMove, canNextMove, props.currentTurnIndex, props.replay]);\n\n    // console.log(`TurnControls#render, autoplay: ${autoplay}, currentTurnIndex:${props.currentTurnIndex}, timerHandle.current: ${timerHandle.current}`);\n    return (<div\n        style={{\n            marginBottom: 24,\n        }}\n    >\n        <div>\n            <TextField\n                label=\"Turn\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                inputProps={{\n                    min: 0,\n                }}\n                style={{\n                    width: \"5em\",\n                }}\n                value={turnInputValue}\n                onChange={e => {\n                    setTurnInputValue(e.target.value);\n                    const turn = parseInt(e.target.value, 10) - 1;\n                    if (isNaN(turn)) return;\n                    props.replay && props.setCurrentTurnIndex(Math.max(0, Math.min(parseInt(e.target.value, 10) - 1, props.replay.turns.length - 1)));\n                }}\n            />\n            <TextField\n                label=\"Delay\"\n                select\n                margin=\"normal\"\n                variant=\"outlined\"\n                style={{\n                    marginLeft: 8,\n                    minWidth: \"5em\",\n                }}\n                value={props.delay}\n                onChange={e => {\n                    const d = parseFloat(e.target.value);\n                    props.setDelay(d);\n                }}\n                InputProps={{\n                    endAdornment: <InputAdornment position=\"end\">s</InputAdornment>,\n                }}\n            >\n                {delayOptions.map(option => (\n                    <MenuItem key={option} value={option}>\n                        {\"\" + option}\n                    </MenuItem>\n                ))}\n            </TextField>\n            <FormControlLabel\n                style={{\n                    marginTop: 24,\n                    marginLeft: 0,\n                }}\n                label=\"3D\"\n                control={<Checkbox\n                    checked={props.mode3d}\n                    onChange={ev => props.setMode3d(ev.target.checked)}\n                />}\n            />\n        </div>\n        <div className={styles.buttonContainer}>\n            <Button\n                color=\"primary\"\n                size=\"small\"\n                variant=\"contained\"\n                className={styles.button}\n                disabled={props.currentTurnIndex <= 0}\n                onClick={() => props.setCurrentTurnIndex(0)}\n            >\n                <SkipPrevious/>\n            </Button>\n            <Button\n                color=\"primary\"\n                size=\"small\"\n                variant=\"contained\"\n                className={styles.button}\n                disabled={props.currentTurnIndex <= 0}\n                onClick={() => props.setCurrentTurnIndex(props.currentTurnIndex - 1)}\n            >\n                <ChevronLeft/>\n            </Button>\n            <Button\n                color=\"primary\"\n                size=\"small\"\n                variant=\"contained\"\n                className={styles.button}\n                disabled={props.currentTurnIndex >= props.replay.turns.length - 1}\n                onClick={() => autoplay ? stopAutoplay() : startAutoplay()}\n            > {autoplay ? <Pause/> : <PlayArrow/>}\n            </Button>\n            <Button\n                color=\"primary\"\n                size=\"small\"\n                variant=\"contained\"\n                className={styles.button}\n                disabled={props.currentTurnIndex >= props.replay.turns.length - 1}\n                onClick={nextMove}\n            >\n                <ChevronRight/>\n            </Button>\n            <Button\n                color=\"primary\"\n                size=\"small\"\n                variant=\"contained\"\n                className={styles.button}\n                disabled={props.currentTurnIndex >= props.replay.turns.length - 1}\n                onClick={() => props.replay && props.setCurrentTurnIndex(props.replay.turns.length - 1)}\n            >\n                <SkipNext/>\n            </Button>\n        </div>\n    </div>);\n};\n","import {Replay, Turn} from \"./replay\";\nimport React, {Dispatch, SetStateAction, useEffect, useState} from \"react\";\nimport {\n    Checkbox,\n    Collapse,\n    FormControlLabel,\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableRow,\n    TextField\n} from \"@material-ui/core\";\nimport {paletteColor0} from \"./palette\";\nimport chroma from \"chroma-js\";\n\ntype PlayerRowData = {\n    index: number;\n    place?: number;\n    name: string;\n    score: number;\n    moves: number;\n    life: number;\n}\n\nexport const StatsTable = (props: {\n    replay: Replay,\n    currentTurn: Turn,\n    tracedPlayers: number[],\n    setTracedPlayers: Dispatch<SetStateAction<number[]>>,\n    traceStart: number,\n    setTraceStart: Dispatch<SetStateAction<number>>,\n}) => {\n    const [traceStartInputValue, setTraceStartInputValue] = useState<string>((props.traceStart + 1).toString(10));\n    const [traceCurrent, setTraceCurrent] = useState<boolean>(false);\n\n    useEffect(() => {\n        const t = traceCurrent ?\n            props.currentTurn.turn - 1\n            : Math.min(props.traceStart, props.currentTurn.turn - 1);\n        props.setTraceStart(t);\n        setTraceStartInputValue((t + 1).toString(10));\n    }, [props, traceCurrent]);\n\n    const showPlacements = props.replay.results.length > 0 && (props.currentTurn.turn === props.replay.turns[props.replay.turns.length - 1].turn);\n    const players: PlayerRowData[] = showPlacements\n        ? (props.replay.results.map(r => {\n            const playerIndex = props.currentTurn.players.findIndex(p => p.name === r.name);\n            return {\n                ...r,\n                life: (playerIndex >= 0 && props.currentTurn.players[playerIndex].life) || 0,\n                index: playerIndex,\n            };\n        }))\n        : props.currentTurn.players.map((p, playerIndex) => {\n            return {\n                ...p,\n                index: playerIndex,\n            };\n        });\n\n    // console.log(`StatsTable#render traceStartInputValue:${traceStartInputValue}, traceStart: ${props.traceStart}, currentTurn: ${props.currentTurn.turn}`);\n    return <div\n        style={{\n            marginBottom: 24,\n        }}\n    >\n        <Table\n            padding=\"none\"\n        >\n            <TableHead>\n                <TableRow>\n                    <TableCell align=\"center\">Trace</TableCell>\n                    <TableCell align=\"center\">Name</TableCell>\n                    <TableCell align=\"center\">Life</TableCell>\n                    <TableCell align=\"center\">Move</TableCell>\n                    <TableCell align=\"center\">Score</TableCell>\n                </TableRow>\n            </TableHead>\n            <TableBody>\n                {players.map((player) =>\n                    <StatsTableRow\n                        key={player.name}\n                        player={player}\n                        traced={props.tracedPlayers.indexOf(player.index) >= 0}\n                        setTraced={v =>\n                            props.setTracedPlayers(arr => v ? [...arr, player.index] : arr.filter(e => e !== player.index))\n                        }\n                    />\n                )}\n            </TableBody>\n        </Table>\n        <Collapse in={props.tracedPlayers.length > 0}>\n            <div>\n                <TextField\n                    label=\"Trace Start\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    inputProps={{\n                        min: 0,\n                    }}\n                    style={{\n                        width: \"6em\",\n                    }}\n                    disabled={traceCurrent}\n                    value={traceStartInputValue}\n                    onChange={e => {\n                        setTraceStartInputValue(e.target.value);\n                        const turn = parseInt(e.target.value, 10) - 1;\n                        if (isNaN(turn)) return;\n                        props.setTraceStart(Math.max(0, Math.min(turn, props.currentTurn.turn - 1)));\n                    }}\n                    onBlur={_ => {\n                        setTraceStartInputValue(v => {\n                            const t = parseInt(v, 10);\n                            const t2 = isNaN(t) ? props.currentTurn.turn : Math.min(t, props.currentTurn.turn);\n                            return t2.toString(10);\n                        });\n                    }}\n                />\n                <FormControlLabel\n                    style={{\n                        marginTop: 24,\n                        marginLeft: 0,\n                    }}\n                    label=\"Current turn\"\n                    control={<Checkbox\n                        checked={traceCurrent}\n                        onChange={ev => setTraceCurrent(ev.target.checked)}\n                    />}\n                />\n            </div>\n        </Collapse>\n    </div>\n};\n\nconst placementColors = [\n    undefined,\n    paletteColor0,\n    chroma(paletteColor0).alpha(0.7).hex(),\n    chroma(paletteColor0).alpha(0.4).hex()\n];\n\nconst StatsTableRow = (props: {\n    player: PlayerRowData,\n    traced: boolean,\n    setTraced: (v: boolean) => void\n}) => {\n    const {player} = props;\n    return <TableRow\n        style={{\n            background: player.place && placementColors[player.place],\n        }}>\n        <TableCell align=\"center\">\n            <Checkbox\n                style={{\n                    padding: 0,\n                }}\n                onChange={ev => {\n                    props.setTraced(ev.target.checked);\n                }}\n                checked={props.traced}\n            />\n        </TableCell>\n        <TableCell align=\"center\">{player.name}</TableCell>\n        <TableCell align=\"center\">{player.life}</TableCell>\n        <TableCell align=\"center\">{player.moves}</TableCell>\n        <TableCell align=\"center\">{player.score}</TableCell>\n    </TableRow>;\n};\n","import {isFinished, Replay} from \"./replay\";\nimport React, {Dispatch, SetStateAction, useState} from \"react\";\nimport {Button, Collapse, Drawer as MuiDrawer, TextField, Typography} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/styles\";\nimport {paletteColor3} from \"./palette\";\nimport {TurnControls} from \"./TurnControls\";\nimport * as FileSaver from 'file-saver';\nimport {StatsTable} from \"./StatsTable\";\n\nconst drawerWidth = 320;\n\nconst useStyles = makeStyles({\n    root: {\n        flexShrink: 0,\n        width: drawerWidth,\n    },\n    paper: {\n        width: drawerWidth,\n        background: `${paletteColor3} !important`,\n        padding: 30,\n        borderTopLeftRadius: 30,\n        borderBottomLeftRadius: 30,\n        border: \"none !important\",\n    },\n});\n\nexport const Drawer = (props: {\n    replay?: Replay,\n    webSocket?: WebSocket,\n    currentTurnIndex: number,\n    setCurrentTurnIndex: Dispatch<SetStateAction<number>>,\n    tracedPlayers: number[],\n    setTracedPlayers: Dispatch<SetStateAction<number[]>>,\n    onConnectWebsocket: (url: string) => Promise<void>,\n    onCloseWebsocket: () => void,\n    onReplayFileUploaded: (content: string) => void,\n    mode3d: boolean,\n    setMode3d: (mode3d: boolean) => void,\n    traceStart: number,\n    setTraceStart: Dispatch<SetStateAction<number>>,\n}) => {\n    const [addressInputValue, setAddressInputValue] = useState(() =>\n        window.localStorage.getItem('serverAddress') || 'ws://localhost:63189'\n    );\n\n    const currentTurn = props.replay && props.replay.turns[props.currentTurnIndex];\n    const [delay, setDelay] = useState(0.1);\n\n    const styles = useStyles();\n\n    return (\n        <MuiDrawer\n            variant=\"permanent\"\n            anchor=\"right\"\n            className={styles.root}\n            classes={{\n                paper: styles.paper,\n            }}\n        >\n            <input\n                id=\"replayFileInput\"\n                type=\"file\"\n                style={{\n                    display: 'none',\n                }}\n                onChange={async e => {\n                    e.preventDefault();\n                    if (e.target.files != null && e.target.files.length > 0) {\n                        const file: File = e.target.files[0];\n                        e.target.value = ''; // Reset value, so user may upload the same filename again\n                        const content = await readFileContents(file);\n                        props.onReplayFileUploaded(content);\n                    }\n\n                }}\n            />\n            <label htmlFor=\"replayFileInput\">\n                <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    component=\"div\"\n                    style={{\n                        width: \"100%\",\n                    }}\n                >\n                    Load replay\n                </Button>\n            </label>\n            {props.webSocket\n                ? <>\n                    <Typography variant=\"body1\" style={{\n                        marginTop: 16,\n                    }}>\n                        Connected to {props.webSocket.url}\n                    </Typography>\n                    <Button\n                        color=\"secondary\"\n                        variant=\"contained\"\n                        onClick={props.onCloseWebsocket}\n                        style={{\n                            marginBottom: 8,\n                        }}\n                    >\n                        Disconnect\n                    </Button>\n                </>\n                : <>\n                    <TextField\n                        label=\"Host\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        value={addressInputValue}\n                        onChange={e => {\n                            setAddressInputValue(e.target.value);\n                            window.localStorage.setItem('serverAddress', e.target.value);\n                        }}\n                        onKeyPress={(ev) => {\n                            if (ev.key === 'Enter') {\n                                ev.preventDefault();\n                                props.onConnectWebsocket(addressInputValue);\n                            }\n                        }}\n                    />\n                    <Button\n                        color=\"primary\"\n                        variant=\"contained\"\n                        onClick={() => props.onConnectWebsocket(addressInputValue)}>\n                        Connect\n                    </Button>\n                </>}\n            <div\n                style={{\n                    marginBottom: 16,\n                }}\n            />\n            <Collapse in={props.replay !== undefined}>\n                {props.replay &&\n                <TurnControls\n                    replay={props.replay}\n                    currentTurnIndex={props.currentTurnIndex}\n                    delay={delay}\n                    setDelay={setDelay}\n                    setCurrentTurnIndex={props.setCurrentTurnIndex}\n                    mode3d={props.mode3d}\n                    setMode3d={props.setMode3d}\n                />}\n                {props.replay && currentTurn &&\n                <StatsTable\n                    replay={props.replay}\n                    currentTurn={currentTurn}\n                    tracedPlayers={props.tracedPlayers}\n                    setTracedPlayers={props.setTracedPlayers}\n                    traceStart={props.traceStart}\n                    setTraceStart={props.setTraceStart}\n                />\n                }\n                {props.replay && isFinished(props.replay) &&\n                <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    onClick={() => {\n                        const blob = new Blob([JSON.stringify(props.replay)], {\n                            type: \"application/json;charset=utf-8\",\n                        });\n                        FileSaver.saveAs(blob, \"replay.json\");\n                    }\n                    }\n                >\n                    Save replay\n                </Button>\n                }\n                <div style={{marginBottom: 30}}/>\n            </Collapse>\n        </MuiDrawer>\n    );\n};\n\nasync function readFileContents(file: File): Promise<string> {\n    return new Promise<string>(resolve => {\n        const reader = new FileReader();\n        reader.readAsText(file);\n        reader.onload = function (event) {\n            const contents = reader.result!! as string;\n            resolve(contents);\n        };\n    });\n}\n","import {mat4, quat} from \"gl-matrix\";\nimport {paletteColor5} from \"./palette\";\nimport chroma from \"chroma-js\";\nimport {Dimension, Point} from \"./geom\";\n\nconst vertexShaderSource = `\nattribute float a_transition;\nattribute vec3 a_pos1;\nattribute vec3 a_pos2;\nattribute vec3 a_normal1;\nattribute vec3 a_normal2;\nattribute vec2 a_uv;\nattribute vec4 a_tint;\nuniform mat4 u_mv;\nuniform mat4 u_mvp;\nvarying vec3 v_normal;\nvarying vec2 v_uv;\nvarying vec4 v_tint;\n\nvoid main() {\n  vec3 pos = a_pos1 * a_transition + a_pos2 * (1.0 - a_transition);\n  gl_Position = u_mvp * vec4(pos, 1.);\n  vec3 normal = a_normal1 * a_transition + a_normal2 * (1.0 - a_transition);\n  v_normal = vec3(u_mv * vec4(normal, 0.0));\n  v_uv = a_uv;\n  v_tint = a_tint;\n}\n`;\n\nconst fragmentShaderSource = `\n#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n\nvarying vec3 v_normal;\nvarying vec2 v_uv;\nvarying vec4 v_tint;\nuniform sampler2D u_texture;\n\nvoid main() {\n  gl_FragColor = texture2D(u_texture, v_uv.st).rgba;\n  gl_FragColor.rgb *= v_tint.rgb;\n  gl_FragColor *= v_tint.a;\n  float diffuse = dot(v_normal, vec3(0,0,1));\n  float ambient = 0.2;\n  gl_FragColor.rgb *= diffuse * 0.8 + ambient;\n}\n`;\n\nconst defaultTint = new Float32Array([1, 1, 1, 1]);\n\nconst mat4Tmp1 = mat4.create();\nconst mat4Tmp2 = mat4.create();\n\nexport interface MyGL {\n    gl: WebGLRenderingContext,\n    programInfo: ProgramInfo,\n    atlasTexture: WebGLTexture,\n}\n\nexport interface ProgramInfo {\n    program: WebGLProgram,\n    uvBuffer: WebGLBuffer,\n    transitionAttribLoc: number,\n    pos1AttribLoc: number,\n    pos2AttribLoc: number,\n    normal1AttribLoc: number,\n    normal2AttribLoc: number,\n    uvAttribLoc: number,\n    tintAttribLoc: number,\n    mvUniformLoc: WebGLUniformLocation,\n    mvpUniformLoc: WebGLUniformLocation,\n    textureUniformLoc: WebGLUniformLocation,\n}\n\nfunction compileShader(gl: WebGLRenderingContext, type: GLenum, src: string) {\n    const shader = gl.createShader(type)!!;\n    gl.shaderSource(shader, src);\n    gl.compileShader(shader);\n    return shader;\n}\n\nfunction initBuffers(gl: WebGLRenderingContext, program: WebGLProgram, atlas: HTMLImageElement): ProgramInfo {\n    const transitionAttribLoc = gl.getAttribLocation(program, 'a_transition');\n    const pos1AttribLoc = gl.getAttribLocation(program, 'a_pos1');\n    gl.enableVertexAttribArray(pos1AttribLoc);\n    const pos2AttribLoc = gl.getAttribLocation(program, 'a_pos2');\n    gl.enableVertexAttribArray(pos2AttribLoc);\n    const normal1AttribLoc = gl.getAttribLocation(program, 'a_normal1');\n    const normal2AttribLoc = gl.getAttribLocation(program, 'a_normal2');\n    gl.enableVertexAttribArray(normal2AttribLoc);\n\n    const uvBuffer = gl.createBuffer()!!;\n    gl.bindBuffer(gl.ARRAY_BUFFER, uvBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(calcUvCoords(atlas)), gl.STATIC_DRAW);\n\n    const uvAttribLoc = gl.getAttribLocation(program, 'a_uv');\n    gl.enableVertexAttribArray(uvAttribLoc);\n    const tintAttribLoc = gl.getAttribLocation(program, \"a_tint\");\n\n    const mvUniformLoc = gl.getUniformLocation(program, 'u_mv')!!;\n    const mvpUniformLoc = gl.getUniformLocation(program, 'u_mvp')!!;\n    const textureUniformLoc = gl.getUniformLocation(program, 'u_texture')!!;\n    return {\n        program,\n        uvBuffer,\n        transitionAttribLoc,\n        pos1AttribLoc,\n        pos2AttribLoc,\n        normal1AttribLoc,\n        normal2AttribLoc,\n        uvAttribLoc,\n        tintAttribLoc,\n        mvUniformLoc,\n        mvpUniformLoc,\n        textureUniformLoc,\n    };\n}\n\nexport async function createMyGL(gl: WebGLRenderingContext): Promise<MyGL> {\n    const atlas = await loadAtlas();\n    const atlasTexture = createTextureFrom(gl, atlas);\n    const program = gl.createProgram()!!;\n    gl.attachShader(program, compileShader(gl, gl.VERTEX_SHADER, vertexShaderSource));\n    gl.attachShader(program, compileShader(gl, gl.FRAGMENT_SHADER, fragmentShaderSource));\n    gl.linkProgram(program);\n    gl.useProgram(program);\n    const programInfo = initBuffers(gl, program, atlas);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n\n    const bgColor = chroma(paletteColor5).gl();\n    gl.clearColor(bgColor[0], bgColor[1], bgColor[2], 1);\n\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n    gl.enable(gl.DEPTH_TEST);\n    gl.depthFunc(gl.LEQUAL);\n\n    return {\n        gl,\n        programInfo,\n        atlasTexture,\n    };\n}\n\nexport function initFrame(myGL: MyGL, rotation: quat,) {\n    const {gl, programInfo} = myGL;\n    resize(gl, programInfo, rotation);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n    gl.useProgram(programInfo.program);\n    gl.activeTexture(gl.TEXTURE0);\n    gl.bindTexture(gl.TEXTURE_2D, myGL.atlasTexture);\n    gl.uniform1i(programInfo.textureUniformLoc, 0);\n    gl.bindBuffer(gl.ARRAY_BUFFER, programInfo.uvBuffer);\n}\n\nfunction createTextureFrom(gl: WebGLRenderingContext, image: HTMLImageElement): WebGLTexture {\n    const id = gl.createTexture()!!;\n    if (id < 1) {\n        throw Error(\"Failed to create atlasTexture\");\n    }\n    gl.bindTexture(gl.TEXTURE_2D, id);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE,\n        image);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.generateMipmap(gl.TEXTURE_2D);\n    return id;\n}\n\nasync function loadAtlas(): Promise<HTMLImageElement> {\n    const a = new Image();\n    a.src = 'atlas.png';\n    console.log(\"Loading atlas image...\");\n    return new Promise(resolve => {\n        a.onload = () => {\n            console.log(\"Loaded atlas successfully.\");\n            resolve(a);\n        }\n    });\n}\n\nfunction calcUvCoords(atlas: HTMLImageElement): number[] {\n    const coords = [],\n        xf = 1 / atlas.width,\n        yf = 1 / atlas.height,\n        nx = .5 * xf,\n        ny = .5 * yf,\n        tileSize = 16;\n    for (let y = 0; y < atlas.height; y += tileSize) {\n        for (let x = 0; x < atlas.width; x += tileSize) {\n            const l = x * xf,\n                t = y * yf,\n                r = l + tileSize * xf,\n                b = t + tileSize * yf;\n            /* TRIANGLE_STRIP order:\n             *   A--C   A: x, y\n             *   | /|   B: x, y\n             *   |/ |   C: x, y\n             *   B--D   D: x, y */\n            coords.push(\n                l + nx, t + ny,\n                l + nx, b - ny,\n                r - nx, t + ny,\n                r - nx, b - ny,\n            )\n        }\n    }\n    return coords;\n}\n\nconst planeNormal = new Float32Array([0, 0, 1]);\n\nexport type DrawSpriteFunc = (sprite: number, pos: Point, tint?: Float32Array) => void;\n\nexport const drawSprite = (\n    myGL: MyGL,\n    mapDim: Dimension,\n    pos1VertexBuffer: WebGLBuffer,\n    pos2VertexBuffer: WebGLBuffer,\n    torusNormalVertexBuffer: WebGLBuffer,\n    modeTransition: number,\n): DrawSpriteFunc => (sprite: number, pos: Point, tint: Float32Array = defaultTint) => {\n    const {gl, programInfo} = myGL;\n    gl.bindBuffer(gl.ARRAY_BUFFER, pos1VertexBuffer);\n    gl.vertexAttribPointer(programInfo.pos1AttribLoc, 3, gl.FLOAT, false, 0, (pos.y * mapDim.width + pos.x) * 4 * 3 * 4);\n    gl.bindBuffer(gl.ARRAY_BUFFER, pos2VertexBuffer);\n    gl.vertexAttribPointer(programInfo.pos2AttribLoc, 3, gl.FLOAT, false, 0, (pos.y * mapDim.width + pos.x) * 4 * 3 * 4);\n    gl.vertexAttrib3fv(programInfo.normal1AttribLoc, planeNormal);\n    gl.bindBuffer(gl.ARRAY_BUFFER, torusNormalVertexBuffer);\n    gl.vertexAttribPointer(programInfo.normal2AttribLoc, 3, gl.FLOAT, false, 0, (pos.y * mapDim.width + pos.x) * 4 * 3 * 4);\n    gl.bindBuffer(gl.ARRAY_BUFFER, programInfo.uvBuffer);\n    gl.vertexAttribPointer(programInfo.uvAttribLoc, 2, gl.FLOAT, false, 0, sprite << 5);\n    gl.vertexAttrib4fv(programInfo.tintAttribLoc, tint);\n    gl.vertexAttrib1f(programInfo.transitionAttribLoc, modeTransition);\n    gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n};\n\nfunction resize(gl: WebGLRenderingContext, pi: ProgramInfo, rotation: quat,) {\n    const canvasWidth = gl.canvas.clientWidth;\n    const canvasHeight = gl.canvas.clientHeight;\n    gl.canvas.width = canvasWidth;\n    gl.canvas.height = canvasHeight;\n    gl.viewport(0, 0, canvasWidth, canvasHeight);\n\n    const x = canvasWidth > canvasHeight ? canvasWidth / canvasHeight : 1.0;\n    const y = canvasHeight > canvasWidth ? canvasHeight / canvasWidth : 1.0;\n\n    const mv = mat4.fromQuat(mat4Tmp1, rotation);\n    gl.uniformMatrix4fv(pi.mvUniformLoc, false, mv);\n\n    const mvp = mat4.identity(mat4Tmp2);\n    mat4.ortho(\n        mvp,\n        -x,\n        x,\n        -y,\n        y,\n        -10,\n        10,\n    );\n    mat4.mul(mvp, mvp, mv);\n    gl.uniformMatrix4fv(pi.mvpUniformLoc, false, mvp);\n}\n","export interface PickerResult {\n    spriteIndex: number;\n    tint?: Float32Array;\n}\n\nexport type SpritePicker = (c: string, x: number, y: number) => PickerResult[];\n\nconst monsterTint = new Float32Array([0, 2.0, 0, 1]);\n\nconst bombChars = \"987654321\";\nconst playerChars = \"ABCDEFGHIJKLMNOP\";\nconst letterChars = \"abcdefghijklmnopqrstuuwxyz\";\nconst monsterChars = \"e\";\nconst obsticleChars = \"#X~\";\nconst boomObsticleChars = \"Y\";\nconst portalChars = \"o&\";\n\nconst chain = (pickers: SpritePicker[]): SpritePicker => {\n    return (c: string, x: number, y: number): PickerResult[] => {\n        for (const picker of pickers) {\n            const result = picker(c, x, y);\n            if (result.length !== 0) {\n                return result;\n            }\n        }\n        return [];\n    }\n};\n\nconst pickBombSprite: SpritePicker = (c, x, y) => {\n    const index = bombChars.indexOf(c);\n    if (index === -1) {\n        return [];\n    }\n    return [{spriteIndex: 8 + index}];\n};\n\nconst pickFlatlandSprite: SpritePicker = (c, x, y) => {\n    const monsterOrPlayerIndex = (playerChars + monsterChars).indexOf(c)\n    if (c === '.' || monsterOrPlayerIndex !== -1) {\n        return [{spriteIndex: (x + y) % 2}];\n    }\n    return [];\n};\n\nconst pickObsticleSprite: SpritePicker = (c, x, y) => {\n    const index = obsticleChars.indexOf(c);\n    if (index === -1) {\n        return [];\n    }\n    return [{spriteIndex: 2 + index}];\n};\n\nconst pickBoomObsticleSprite: SpritePicker = (c, x, y) => {\n    const index = boomObsticleChars.indexOf(c);\n    if (index === -1) {\n        return [];\n    }\n    return [{spriteIndex: 2 + index}];\n};\n\nconst pickPowerUpSprite: SpritePicker = (c, x, y) => {\n    if (c === '+') {\n        return [{spriteIndex: 113}];\n    }\n    return [];\n};\n\nexport const pickMonsterSprite: SpritePicker = (c, x, y) => {\n    if (c === 'e') {\n        return pickFlatlandSprite(c, x, y).concat({\n            spriteIndex: 112,\n            tint: monsterTint,\n        });\n    }\n    return [];\n}\n\nconst pickLetterSprite: SpritePicker = (c, x, y) => {\n    const index = letterChars.indexOf(c);\n    if (index === -1) {\n        return [];\n    }\n    return [{spriteIndex: 17 + index}];\n}\n\nconst pickPortalSprite: SpritePicker = (c, x, y) => {\n    if (portalChars.indexOf(c) === -1) {\n        return [];\n    }\n    return [{spriteIndex: 6}];\n}\n\nconst pickGemSprite: SpritePicker = (c, x, y) => {\n    if (c === '@') {\n        return [{spriteIndex: 5}];\n    }\n    return [];\n};\n\nconst pickSnakeTailSprite: SpritePicker = (c, x, y) => {\n    if (c === '*') {\n        return [{spriteIndex: 7}];\n    }\n    return [];\n};\n\nexport const defaultSpritePicker: SpritePicker = chain([pickFlatlandSprite, pickObsticleSprite, pickPortalSprite, pickGemSprite, pickSnakeTailSprite]);\nexport const wordSpritePicker: SpritePicker = chain([pickLetterSprite, defaultSpritePicker]);\nexport const hordeSpritePicker: SpritePicker = chain([pickPowerUpSprite, pickMonsterSprite, defaultSpritePicker]);\nexport const bombSpritePicker: SpritePicker = chain([pickBombSprite, pickBoomObsticleSprite, pickPowerUpSprite, defaultSpritePicker]);\n\nexport const pickPlayerSpriteStart: SpritePicker = (c, x, y) => {\n    const index = playerChars.indexOf(c);\n    if (index === -1) {\n        return [];\n    }\n    return [{spriteIndex: 48 + index * 4}];\n};\n","import {Dimension} from \"./geom\";\nimport {vec3} from \"gl-matrix\";\n\nconst torusInnerRadius = 0.5;\nconst torusOuterRadius = 1.2; // This size still fits nicely in the view\n\nconst tmpVec = vec3.create();\nconst origin = vec3.create();\n\ntype VecFunc = (mapDim: Dimension, x: number, y: number) => vec3;\n\nconst createVertexBuffer = (posFunc: VecFunc) => (gl: WebGLRenderingContext, mapDim: Dimension): WebGLBuffer => {\n    const buf = gl.createBuffer()!!;\n    gl.bindBuffer(gl.ARRAY_BUFFER, buf);\n    const data = new Float32Array(mapDim.width * mapDim.height * 4 * 3);\n\n    function setVec(index: number, v: vec3) {\n        data[index * 3] = v[0];\n        data[index * 3 + 1] = v[1];\n        data[index * 3 + 2] = v[2];\n    }\n\n    for (let y = 0; y < mapDim.height; ++y) {\n        for (let x = 0; x < mapDim.width; ++x) {\n            const off = (y * mapDim.width + x) * 4;\n            setVec(off, posFunc(mapDim, x, y + 1));\n            setVec(off + 1, posFunc(mapDim, x, y));\n            setVec(off + 2, posFunc(mapDim, x + 1, y + 1));\n            setVec(off + 3, posFunc(mapDim, x + 1, y));\n        }\n    }\n    gl.bufferData(gl.ARRAY_BUFFER, data, gl.STATIC_DRAW);\n    return buf;\n};\n\nconst torusPos: VecFunc = (mapDim: Dimension, x: number, y: number) => {\n    const normX = (2 * x / mapDim.width) - 1;\n    const normY = (2 * y / mapDim.height) - 1;\n    const v = vec3.set(tmpVec, 0, 0, (torusOuterRadius - torusInnerRadius) * 0.5);\n    vec3.rotateY(v, v, origin, normX * Math.PI);\n    vec3.add(v, v, [torusOuterRadius * 0.5, 0, 0]);\n    vec3.rotateZ(v, v, origin, normY * Math.PI);\n    return v;\n};\n\nconst torusNormal: VecFunc = (mapDim: Dimension, x: number, y: number) => {\n    const normX = (2 * x / mapDim.width) - 1;\n    const normY = (2 * y / mapDim.height) - 1;\n    const v = vec3.set(tmpVec, 0, 0, 1);\n    vec3.rotateY(v, v, origin, normX * Math.PI);\n    vec3.rotateZ(v, v, origin, normY * Math.PI);\n    return v;\n};\n\nconst planePos: VecFunc = (mapDim: Dimension, x: number, y: number) => {\n    const normX = (2 * x / mapDim.width) - 1;\n    const normY = (2 * y / mapDim.height) - 1;\n    return vec3.set(tmpVec, normX, normY, 0);\n};\n\nexport const createTorusPosVertexBuffer: (gl: WebGLRenderingContext, mapDim: Dimension) => WebGLBuffer = createVertexBuffer(torusPos);\nexport const createTorusNormalVertexBuffer: (gl: WebGLRenderingContext, mapDim: Dimension) => WebGLBuffer = createVertexBuffer(torusNormal);\nexport const createPlanePosVertexBuffer: (gl: WebGLRenderingContext, mapDim: Dimension) => WebGLBuffer = createVertexBuffer(planePos);\n","import {Turn} from \"./replay\";\nimport {Dimension} from \"./geom\";\n\ntype BitSet = boolean[];\n\nfunction addPlayerViewToSet(result: BitSet, mapDim: Dimension, posx: number, posy: number, radius: number,) {\n    for (let x = posx - radius; x <= posx + radius; ++x) {\n        for (let y = posy - radius; y <= posy + radius; ++y) {\n            const xx = (x + mapDim.width) % mapDim.width;\n            const yy = (y + mapDim.height) % mapDim.height;\n            result[xx + yy * mapDim.width] = true;\n        }\n    }\n    return result;\n}\n\nexport function calcSeenFields(\n    props: {\n        mapDim: Dimension,\n        turns: Turn[],\n        tracedPlayers: number[],\n        viewRadius: number,\n    }): BitSet {\n    const result = new Array(props.mapDim.width * props.mapDim.height).fill(false);\n    for (const turn of props.turns) {\n        for (const playerIndex of props.tracedPlayers) {\n            const player = turn.players[playerIndex];\n            addPlayerViewToSet(result, props.mapDim, player.x, player.y, props.viewRadius);\n        }\n    }\n    return result;\n}\n","import {GameMode, Replay} from \"./replay\";\nimport React, {useEffect, useRef, useState} from \"react\";\nimport {createMyGL, drawSprite, DrawSpriteFunc, initFrame, MyGL} from \"./myGL\";\nimport {\n    bombSpritePicker,\n    defaultSpritePicker,\n    hordeSpritePicker,\n    pickPlayerSpriteStart,\n    SpritePicker,\n    wordSpritePicker\n} from \"./SpritePicker\"\nimport {makeStyles} from \"@material-ui/styles\";\nimport {Dimension, isEqualDimension} from \"./geom\";\nimport {\n    createPlanePosVertexBuffer,\n    createTorusNormalVertexBuffer,\n    createTorusPosVertexBuffer\n} from \"./vertexPosBuffers\";\nimport {calcSeenFields} from \"./mapUtils\";\nimport {Howl} from 'howler';\nimport {quat} from \"gl-matrix\";\n\nconst orientations = \"^v><\";\n\nconst useStyles = makeStyles({\n    root: {\n        flexGrow: 1,\n        width: '100%',\n        height: '100%',\n        // This is important, otherwise the browser will cancel pointermove events\n        touchAction: 'none',\n    },\n});\n\nconst explosionSound = new Howl({src: \"explosion.wav\"});\n\nfunction pickSpritePickerFor(gameMode?: GameMode): SpritePicker {\n    switch (gameMode) {\n        case GameMode.training:\n        case GameMode.escape:\n        case GameMode.collect:\n        case GameMode.snakes:\n        case GameMode.avoid:\n        case GameMode.rumble:\n            return defaultSpritePicker;\n        case GameMode.horde:\n            return hordeSpritePicker;\n        case GameMode.boom:\n            return bombSpritePicker;\n        case GameMode.word:\n            return wordSpritePicker;\n        default:\n            return defaultSpritePicker;\n    }\n}\n\ninterface DeathSprite {\n    setOpacity: (v: number) => void;\n    render: (drawSprite: DrawSpriteFunc) => void;\n    remove: () => void;\n}\n\ntype Animation = (now: number) => Animation | null;\n\nfunction renderFrame(props: {\n    myGL: MyGL,\n    spritePicker: SpritePicker,\n    replay: Replay,\n    rotation: quat,\n    currentTurnIndex: number,\n    tracedPlayers: number[],\n    traceStart: number,\n    drawSprite: DrawSpriteFunc,\n    deathSprites: DeathSprite[],\n}) {\n    const {myGL} = props;\n    initFrame(myGL, props.rotation);\n\n    if (props.replay.turns.length <= props.currentTurnIndex) {\n        return;\n    }\n    const turn = props.replay.turns[props.currentTurnIndex];\n    const mapDim: Dimension = {\n        width: props.replay.map_width, height: props.replay.map_height,\n    };\n    const seenTint = new Float32Array([1.5, 1.5, 1.5, 1]);\n    const currentlyVisibleTint = new Float32Array([2.0, 2.0, 2.0, 1]);\n    const seenFields = calcSeenFields({\n        mapDim,\n        turns: props.replay.turns.slice(props.traceStart, props.currentTurnIndex),\n        tracedPlayers: props.tracedPlayers,\n        viewRadius: props.replay.view_radius,\n    });\n    const currentlyVisibleFields = calcSeenFields({\n        mapDim,\n        turns: [props.replay.turns[props.currentTurnIndex]],\n        tracedPlayers: props.tracedPlayers,\n        viewRadius: props.replay.view_radius,\n    });\n\n    // Draw map\n    for (let yy = 0; yy < props.replay.map_height; ++yy) {\n        const y = props.replay.map_height - yy - 1;\n        for (let x = 0; x < props.replay.map_width; ++x) {\n            const pos = {x, y};\n            const index = x + yy * props.replay.map_width;\n            const c = turn.map.charAt(index);\n            const tint = (currentlyVisibleFields[index] && currentlyVisibleTint) || (seenFields[index] && seenTint) || undefined;\n            for (const r of props.spritePicker(c, x, y)) {\n                props.drawSprite(r.spriteIndex, pos, r.tint || tint);\n            }\n        }\n    }\n\n    // Draw traces\n    const traceTint = new Float32Array([1, 1, 1, 0.3]);\n    for (let turnIndex = props.traceStart; turnIndex < props.currentTurnIndex; ++turnIndex) {\n        const turn = props.replay.turns[turnIndex];\n        for (let i = 0; i < turn.players.length; ++i) {\n            if (props.tracedPlayers.indexOf(i) < 0) continue;\n            let player = turn.players[i];\n            const orientationOffset = orientations.indexOf(player.bearing);\n            const pos = {x: player.x, y: props.replay.map_height - player.y - 1};\n            const playerSprite = pickPlayerSpriteStart(player.name, player.x, player.y)[0];\n            props.drawSprite(playerSprite.spriteIndex + orientationOffset, pos, traceTint);\n        }\n    }\n\n    // Draw players\n    for (const player of turn.players) {\n        if (player.life <= 0) {\n            continue;\n        }\n        const playerSprite = pickPlayerSpriteStart(player.name, player.x, player.y)[0];\n        const orientationOffset = orientations.indexOf(player.bearing);\n        const y = props.replay.map_height - player.y - 1;\n        const pos = {x: player.x, y};\n        props.drawSprite(playerSprite.spriteIndex + orientationOffset, pos);\n    }\n\n    // Draw death sprites\n    props.deathSprites.forEach(s => s.render(props.drawSprite));\n}\n\nfunction createNewDeathSprites(replay: Replay, currentTurnIndex: number, onRemove: (s: DeathSprite) => void): DeathSprite[] {\n    if (replay.turns.length <= currentTurnIndex) {\n        return [];\n    }\n    const turn = replay.turns[currentTurnIndex];\n    const result: DeathSprite[] = [];\n    for (const player of turn.players) {\n        if (player.life <= 0 && player.moves === (turn.turn - 1)) {\n            const tint = new Float32Array([1, 1, 1, 1]);\n            const pos = {x: player.x, y: replay.map_height - player.y - 1};\n            const s: DeathSprite = {\n                setOpacity: (v: number) => {\n                    tint[3] = v;\n                },\n                remove: () => {\n                    onRemove(s)\n                },\n                render: function (drawSprite: DrawSpriteFunc) {\n                    drawSprite(114, pos, tint);\n                }\n            };\n            result.push(s);\n        }\n    }\n    return result;\n}\n\nconst deathAnimationDuration = 1000.0;\n\nfunction createDeathAnimation(startTime: number, sprite: DeathSprite): Animation {\n    explosionSound.play();\n    const a: Animation = (now: number) => {\n        if (now - startTime > deathAnimationDuration) {\n            sprite.remove();\n            return null;\n        } else {\n            sprite.setOpacity(1.0 - (now - startTime) / deathAnimationDuration);\n            return a;\n        }\n    };\n    return a;\n}\n\nfunction createScalarAnimation(props: { startTime: number, duration: number, from: number, to: number, set: (v: number) => void }): Animation {\n    const a: Animation = (now: number) => {\n        if (now - props.startTime > props.duration) {\n            props.set(props.to);\n            return null;\n        } else {\n            const v = easeInOut((now - props.startTime) / props.duration);\n            props.set((1 - v) * props.from + v * props.to);\n            return a;\n        }\n    };\n    return a;\n}\n\nfunction easeInOut(v: number): number {\n    const v2 = 2 * v;\n    if (v2 < 1) {\n        return (v2 * v2 * v2) / 2;\n    }\n    const ov = v2 - 2;\n    return (2 + ov * ov * ov) / 2;\n}\n\nconst rotationSpeed = 0.05;\n\ninterface PerMapVertexBuffers {\n    mapDim: Dimension,\n    torusPosVertexBuffer: WebGLBuffer,\n    torusNormalVertexBuffer: WebGLBuffer,\n    planePosVertexBuffer: WebGLBuffer,\n};\n\nexport const Board = (props: {\n    replay: Replay,\n    currentTurnIndex: number,\n    tracedPlayers: number[],\n    mode3d: boolean,\n    traceStart: number,\n}) => {\n    const styles = useStyles();\n    const canvasRef = useRef<HTMLCanvasElement>(null);\n    const [myGL, setMyGL] = useState<MyGL>();\n    const perMapVertexBuffers = useRef<PerMapVertexBuffers | null>(null);\n    const prevTurnIndex = useRef(props.currentTurnIndex);\n    const prevMode3d = useRef(props.mode3d);\n    const deathSprites = useRef<DeathSprite[]>([]);\n    const animations = useRef<Animation[]>([]);\n    const modeAnimation = useRef<Animation | null>(null);\n    const modeTransition = useRef(props.mode3d ? 0.0 : 1.0);\n    const [forceRenderCounter, setForceRenderCounter] = useState(0);\n    const [rotation, setRotation] = useState(quat.create());\n    const windowSize = useWindowSize();\n\n    useEffect(() => {\n            if (canvasRef.current == null) {\n                return;\n            }\n            console.log(\"Initializing WebGL\");\n            const c = canvasRef.current;\n            const gl = c.getContext('webgl') || c.getContext('experimental-webgl')!!;\n            createMyGL(gl).then(myGL => {\n                setMyGL(myGL);\n            });\n        },\n        [] // no deps means only run this effect once (after mount)\n    );\n    useEffect(() => {\n        if (myGL === undefined) return;\n        const mapDim: Dimension = {\n            width: props.replay.map_width, height: props.replay.map_height,\n        };\n        if (perMapVertexBuffers.current && isEqualDimension(perMapVertexBuffers.current.mapDim, mapDim)) return;\n        console.log(`Recreating vertex pos buffer for map dims: ${mapDim}`);\n        perMapVertexBuffers.current = {\n            mapDim,\n            planePosVertexBuffer: createPlanePosVertexBuffer(myGL!!.gl, mapDim),\n            torusNormalVertexBuffer: createTorusNormalVertexBuffer(myGL!!.gl, mapDim),\n            torusPosVertexBuffer: createTorusPosVertexBuffer(myGL!!.gl, mapDim)\n        };\n    }, [props.replay, myGL]);\n\n    useEffect(() => {\n        if (myGL === undefined) return;\n        const now = performance.now();\n        // console.log(`rendering, now: ${now}, forceRenderCounter:${forceRenderCounter}, animationCount: ${animations.current.length}`);\n        const mapDim: Dimension = {\n            width: props.replay.map_width, height: props.replay.map_height,\n        };\n        const b = perMapVertexBuffers.current!!;\n        const drawSpriteFunc = drawSprite(myGL, mapDim, b.planePosVertexBuffer, b.torusPosVertexBuffer, b.torusNormalVertexBuffer, modeTransition.current);\n\n        if (props.currentTurnIndex > prevTurnIndex.current) {\n            const newDeathSprites = createNewDeathSprites(props.replay, props.currentTurnIndex, s => {\n                const i = deathSprites.current.indexOf(s);\n                if (i >= 0) deathSprites.current.splice(i, 1);\n            });\n            deathSprites.current = deathSprites.current.concat(newDeathSprites);\n            animations.current = animations.current.concat(newDeathSprites.map(s => createDeathAnimation(now, s)));\n        }\n\n        if (props.mode3d !== prevMode3d.current) {\n            modeAnimation.current = createScalarAnimation({\n                startTime: now,\n                duration: 1000,\n                from: modeTransition.current,\n                to: props.mode3d ? 0.0 : 1.0,\n                set: v => modeTransition.current = v,\n            });\n        }\n\n        // Progress animations\n        animations.current = filterNulls(animations.current.map(a => a(now)));\n        if (modeAnimation.current) {\n            modeAnimation.current = modeAnimation.current(now);\n        }\n\n        renderFrame({\n            myGL,\n            spritePicker: pickSpritePickerFor(props.replay.mode),\n            drawSprite: drawSpriteFunc,\n            rotation: quat.scale(quat.create(), rotation, 1 - modeTransition.current),\n            deathSprites: deathSprites.current,\n            ...props,\n        });\n        if (animations.current.length > 0 || modeAnimation.current) {\n            setForceRenderCounter(x => x + 1);\n        }\n    }, [myGL, props, rotation, forceRenderCounter, windowSize]);\n\n    useEffect(() => {\n        prevTurnIndex.current = props.currentTurnIndex;\n        prevMode3d.current = props.mode3d;\n    });\n\n    return (\n        <div className={styles.root}>\n            <canvas\n                onPointerMove={ev => {\n                    if (ev.buttons !== 0 && props.mode3d) {\n                        const mx = ev.movementY * rotationSpeed;\n                        const my = ev.movementX * rotationSpeed;\n                        setRotation((rot) => {\n                            const result = quat.create();\n                            quat.rotateX(result, rot, mx);\n                            quat.rotateY(result, result, my);\n                            return result;\n                        })\n                    }\n                }}\n                ref={canvasRef}\n                style={{\n                    width: \"100%\",\n                    height: \"100%\",\n                }}\n            >\n                Your browser does not support HTML5 canvas.\n            </canvas>\n        </div>\n    );\n};\n\n/**\n * Adapted from https://usehooks.com/useWindowSize/\n */\nfunction useWindowSize() {\n    const [windowSize, setWindowSize] = useState(getWindowSize);\n\n    useEffect(() => {\n        function handleResize() {\n            setWindowSize(getWindowSize());\n        }\n\n        window.addEventListener('resize', handleResize);\n        return (): void => window.removeEventListener('resize', handleResize);\n    }, []); // Empty array ensures that effect is only run on mount and unmount\n\n    return windowSize;\n}\n\nfunction getWindowSize() {\n    const isClient = typeof window === 'object';\n    return {\n        width: isClient ? window.innerWidth : undefined,\n        height: isClient ? window.innerHeight : undefined\n    };\n}\n\nfunction randomInt(max: number): number {\n    return Math.floor(Math.random() * max);\n}\n\n// eslint-disable-next-line\nfunction randomIntBetween(min: number, max: number): number {\n    return min + randomInt(max - min);\n}\n\nexport function filterNulls<T>(l: (T | null)[]): T[] {\n    return l.filter((t: T | null): t is T => !!t);\n}\n","export interface Point {\n    x: number;\n    y: number;\n}\n\nexport interface Dimension {\n    width: number;\n    height: number;\n}\n\nexport const isEqualDimension = (a: Dimension, b: Dimension) => a.width === b.width && a.height === b.height;\n\nexport interface Rect {\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n}\n\n","import React, {useEffect, useState} from 'react';\nimport {Header, parseReplay, Replay, Results, Turn} from \"./replay\";\nimport {Drawer} from \"./Drawer\";\nimport {Board} from \"./Board\";\nimport {createMuiTheme, CssBaseline, Dialog, DialogTitle, Slide} from \"@material-ui/core\";\nimport {makeStyles, ThemeProvider} from \"@material-ui/styles\";\nimport {paletteColor0, paletteColor2, paletteColor3, paletteColor5} from \"./palette\";\nimport {ErrorMessage, isErrorMessage} from \"./errors\";\nimport {TransitionProps} from \"@material-ui/core/transitions\";\n\nconst theme = createMuiTheme({\n    palette: {\n        type: 'dark',\n        primary: {\n            main: paletteColor0,\n        },\n        secondary: {\n            main: paletteColor2,\n        },\n        background: {\n            default: paletteColor5,\n        },\n    },\n    overrides: {\n        MuiPaper: {\n            root: {\n                backgroundColor: paletteColor3,\n            },\n        },\n    },\n});\n\nconst useStyles = makeStyles({\n    root: {\n        display: 'flex',\n        height: \"100%\",\n        width: \"100%\",\n        top: 0,\n        position: \"fixed\",\n    },\n});\n\nasync function tryToLoadReplayFromUrl(): Promise<string | undefined> {\n    const params = new URLSearchParams(document.location.search);\n    const replayUrl = params.get('replay_url');\n    if (!replayUrl) return undefined;\n    const response = await fetch(replayUrl);\n    return response.text();\n}\n\nconst ErrorDialogTransition = React.forwardRef<unknown, TransitionProps>(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport const App: React.FC = () => {\n    const styles = useStyles();\n    const [replay, setReplay] = useState<Replay | undefined>(undefined);\n    const [currentTurnIndex, setCurrentTurnIndex] = useState(0);\n    const [webSocket, setWebSocket] = useState<WebSocket | undefined>(undefined);\n    const [tracedPlayers, setTracedPlayers] = useState<number[]>([]);\n    const [traceStart, setTraceStart] = useState<number>(0);\n    const [mode3d, setMode3d] = useState<boolean>(false);\n    const [error, setError] = useState<string | undefined>(undefined);\n\n    const handleReplay = (content: string) => {\n        const result = parseReplay(content);\n        if (typeof result === \"string\") {\n            setError(result);\n        } else {\n            if (result.warning) {\n                setError(result.warning);\n            }\n            setWebSocket(ws => {\n                if (ws) ws.close();\n                return undefined;\n            });\n            setCurrentTurnIndex(0);\n            setReplay(result.replay);\n        }\n    };\n\n    useEffect(() => {\n        tryToLoadReplayFromUrl().then(s => {\n            if (s) handleReplay(s);\n        });\n    }, []);\n\n    return (\n        <ThemeProvider theme={theme}>\n            <CssBaseline/>\n            <Dialog\n                open={error !== undefined}\n                onClose={() => setError(undefined)}\n                TransitionComponent={ErrorDialogTransition}\n            >\n                <DialogTitle>\n                    {error}\n                </DialogTitle>\n            </Dialog>\n            <div className={styles.root}>\n                <div\n                    style={{\n                        position: 'relative',\n                        width: '100%',\n                        height: '100%',\n                    }}>\n                    {replay &&\n                    <Board\n                        replay={replay}\n                        currentTurnIndex={currentTurnIndex}\n                        tracedPlayers={tracedPlayers}\n                        traceStart={traceStart}\n                        mode3d={mode3d}\n                    />\n                    }\n                    <Slide direction=\"up\" in={replay === undefined} timeout={{enter: 0, exit: 500}}>\n                        <div\n                            style={{\n                                position: 'absolute',\n                                width: '100%',\n                                height: '100%',\n                                top: 0,\n                                left: 0,\n                                background: `url(BotsSticker.svg) no-repeat top`,\n                            }}\n                        />\n                    </Slide>\n                </div>\n\n                <Drawer\n                    replay={replay}\n                    webSocket={webSocket}\n                    currentTurnIndex={currentTurnIndex}\n                    setCurrentTurnIndex={setCurrentTurnIndex}\n                    tracedPlayers={tracedPlayers}\n                    setTracedPlayers={setTracedPlayers}\n                    mode3d={mode3d}\n                    setMode3d={setMode3d}\n                    traceStart={traceStart}\n                    setTraceStart={setTraceStart}\n                    onConnectWebsocket={async url => {\n                        const websocketResult = await createSpectatorWebsocket(url, {\n                            onHeader: (header: Header) => {\n                                setReplay({...header, turns: [], results: []});\n                            },\n                            onTurn: (turn: Turn) => {\n                                setReplay(replay => {\n                                    return {...replay!!, turns: [...replay!!.turns, turn]}\n                                });\n                            },\n                            onResults: (results: Results) => {\n                                setReplay(replay => {\n                                    return {...replay!!, ...results};\n                                });\n                            },\n                            onDisconnect: () => {\n                                setWebSocket(undefined);\n                            },\n                            onError: (message: string) => {\n                                setError(message);\n                            }\n                        });\n\n                        if (isErrorMessage(websocketResult)) {\n                            setError(websocketResult.message);\n                            return;\n                        } else {\n                            setWebSocket(websocketResult);\n                        }\n                        setCurrentTurnIndex(0);\n                        setReplay(undefined);\n                    }}\n                    onCloseWebsocket={() =>\n                        setWebSocket(ws => {\n                            if (ws) {\n                                ws.close();\n                            }\n                            return undefined;\n                        })\n                    }\n                    onReplayFileUploaded={handleReplay}\n                />\n            </div>\n        </ThemeProvider>\n    );\n};\n\ninterface SpectatorListener {\n    onHeader: (header: Header) => void;\n    onTurn: (turn: Turn) => void;\n    onResults: (results: Results) => void;\n    onDisconnect: () => void;\n    onError: (message: string) => void;\n}\n\nasync function createSpectatorWebsocket(url: string, listener: SpectatorListener): Promise<WebSocket | ErrorMessage> {\n    return new Promise((resolve, reject) => {\n        try {\n            const webSocket = new WebSocket(url);\n            webSocket.onopen = ev => {\n                resolve(webSocket);\n            };\n            webSocket.onerror = ev => {\n                resolve({\n                    message: `Error establishing WebSocket to ${url}`\n                });\n            };\n            webSocket.onmessage = message => {\n                const messageData = JSON.parse(message.data);\n                if (messageData.max_turns !== undefined) {\n                    if (!messageData.mode) {\n                        listener.onError(\"Warning: Header is missing mode-field - you're probably connected to an old bots version, using default sprites.\");\n                    }\n                    listener.onHeader(messageData);\n                } else if (messageData.results !== undefined) {\n                    listener.onResults(messageData);\n                } else if (messageData.turn !== undefined) {\n                    listener.onTurn(messageData);\n                } else {\n                    throw Error(`unexpected message: ${message.data}`);\n                }\n            };\n            webSocket.onclose = listener.onDisconnect;\n            return webSocket;\n        } catch (e) {\n            resolve({message: e.toString()});\n        }\n    });\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n            window.location.href\n        );\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export interface ErrorMessage {\n    message: string;\n}\n\nexport function isErrorMessage<T>(x: ErrorMessage | T): x is ErrorMessage {\n    return (x as ErrorMessage).message !== undefined;\n}\n"],"sourceRoot":""}